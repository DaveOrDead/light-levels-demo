{"version":3,"sources":["js/vendor/ambientLightSensorSimulator.js"],"names":["isSupported","window","infoBanner","document","querySelector","classList","add","removeAttribute","setAttribute","AmbientLightSensor","Error","self","SECONDS_PER_CYCLE","MIN_LUX","MAX_LUX","readingListeners","errorListeners","simulating","illuminance","Object","start","requestAnimationFrame","update","time","tau","Math","PI","msPerCycle","percentageOfCycleTimeInRadians","cycleValue","sin","forEach","listener","setTimeout","bind","stop","freeze","defineProperties","onreading","get","set","push","onerror"],"mappings":";CAAA,WACQA,IAAAA,EACJ,uBAAwBC,QAAU,kBAAmBA,OACjDC,EAAaC,SAASC,cAAc,mBAC1CF,EAAWG,UAAUC,IAAIN,EAAc,aAAe,YACtDE,EAAWK,gBAAgB,eAC3BL,EAAWM,aAAa,OAAQ,UAChCN,EAAWM,aAAa,YAAa,UACrCN,EAAWG,UAAUC,IAAI,cAEpBN,IACHC,OAAOQ,mBAAqB,WACtB,GAAA,MAAQR,OACJ,MAAA,IAAIS,MAAM,gDAEZC,IAAAA,EAAO,KAGPC,EAAoB,GACpBC,EAAU,GACVC,EAAU,KAGVC,EAAmB,GACnBC,EAAiB,GACnBC,GAAa,EAGbC,EAAcL,EAiCXM,OAZFC,KAAAA,MAAQ,WACNH,IACHA,GAAa,EACbI,sBAtBKC,SAAAA,IAAiB,IAAA,EAAA,KAAVC,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,EACfC,EAAgB,EAAVC,KAAKC,GACXC,EAAiC,IAApBf,EAEbgB,EAAkCJ,EAAMG,GAD5BJ,EAAOI,GAEnBE,GAAc,EAAIJ,KAAKK,IAAIF,IAAmC,EAGpEV,EAF4BL,GAAWC,EAAUD,GAAWgB,EAI5Dd,EAAiBgB,QAAQ,SAAAC,GACvBC,WAAW,WAAMD,OAAAA,EAAS,IAAO,KAG/Bf,GACFI,sBAAsBC,EAAOY,KAAKvB,KAOLuB,KAAKvB,MAKjCwB,KAAAA,KAAO,WACVlB,GAAa,GAGRE,OAAOiB,OACZjB,OAAOkB,iBAAiB,KAAM,CAC5BC,UAAW,CACTC,IAAK,WAAMxB,OAAAA,EAAiB,IAC5ByB,IAAK,SAAAR,GAAajB,OAAAA,EAAiB0B,KAAKT,GAAWA,IAErDU,QAAS,CACPH,IAAK,WAAMvB,OAAAA,EAAe,IAC1BwB,IAAK,SAAAR,GAAahB,OAAAA,EAAeyB,KAAKT,GAAWA,IAEnDd,YAAa,CACXqB,IAAK,WAAMrB,OAAAA,SAxEvB","file":"ambientLightSensorSimulator.58fb80d1.js","sourceRoot":"..","sourcesContent":["(function() {\n  const isSupported =\n    \"AmbientLightSensor\" in window || \"ondevicelight\" in window;\n  const infoBanner = document.querySelector(\".js-info-banner\");\n  infoBanner.classList.add(isSupported ? \"is-success\" : \"is-error\");\n  infoBanner.removeAttribute(\"aria-hidden\");\n  infoBanner.setAttribute(\"role\", \"status\");\n  infoBanner.setAttribute(\"aria-live\", \"polite\");\n  infoBanner.classList.add(\"is-visible\");\n\n  if (!isSupported) {\n    window.AmbientLightSensor = function() {\n      if (this == window) {\n        throw new Error(\"AmbientLightSensor must be invoked with new.\");\n      }\n      const self = this;\n\n      // Emulation defaults\n      const SECONDS_PER_CYCLE = 10;\n      const MIN_LUX = 25;\n      const MAX_LUX = 1500;\n\n      // State storage\n      const readingListeners = [];\n      const errorListeners = [];\n      let simulating = false;\n\n      // sensor value\n      let illuminance = MIN_LUX;\n\n      function update(time = 0) {\n        const tau = Math.PI * 2;\n        const msPerCycle = SECONDS_PER_CYCLE * 1e3;\n        const cycleTime = time % msPerCycle;\n        const percentageOfCycleTimeInRadians = (tau / msPerCycle) * cycleTime;\n        const cycleValue = (1 + Math.sin(percentageOfCycleTimeInRadians)) / 2;\n        const currentSimulatedLux = MIN_LUX + (MAX_LUX - MIN_LUX) * cycleValue;\n\n        illuminance = currentSimulatedLux;\n\n        readingListeners.forEach(listener => {\n          setTimeout(() => listener(this), 0);\n        });\n\n        if (simulating) {\n          requestAnimationFrame(update.bind(self));\n        }\n      }\n\n      this.start = function commenceSimulation() {\n        if (!simulating) {\n          simulating = true;\n          requestAnimationFrame(update.bind(self));\n        }\n        simulating;\n      };\n\n      this.stop = function stopSimulation() {\n        simulating = false;\n      };\n\n      return Object.freeze(\n        Object.defineProperties(this, {\n          onreading: {\n            get: () => readingListeners[0],\n            set: listener => (readingListeners.push(listener), listener)\n          },\n          onerror: {\n            get: () => errorListeners[0],\n            set: listener => (errorListeners.push(listener), listener)\n          },\n          illuminance: {\n            get: () => illuminance\n          }\n        })\n      );\n    };\n  }\n})();\n"]}